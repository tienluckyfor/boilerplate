{"version":3,"file":"mylib.cjs.production.min.js","sources":["../src/components/Button.tsx","../src/components/Thing.tsx"],"sourcesContent":["import React, {FC, HTMLAttributes, ReactChild, useEffect, useState} from 'react';\n\nexport interface ButtonProps extends HTMLAttributes<HTMLDivElement> {\n    children?: ReactChild;\n    text: string;\n}\n\nexport const Button: FC<ButtonProps> = ({text}) => {\n    const [count, setCount] = useState<number>(0)\n    useEffect(() => {\n        console.log('Thing hook')\n    }, [])\n    return <>\n        <button\n            onClick={()=>setCount(prevState => prevState+1)}\n            type=\"button\"\n            className=\"inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        >\n            {count+' '}\n            Button text\n        </button>\n        <button\n            type=\"button\"\n            className=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        >\n            {text+' '}\n            Button text\n        </button>\n        <button\n            type=\"button\"\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        >\n            Button text\n        </button>\n        <button\n            type=\"button\"\n            className=\"inline-flex items-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        >\n            Button text\n        </button>\n        <button\n            type=\"button\"\n            className=\"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        >\n            Button text\n        </button>\n    </>;\n}\n","import React, {FC, HTMLAttributes, ReactChild} from 'react';\n\nexport interface Props extends HTMLAttributes<HTMLDivElement> {\n    /** custom content, defaults to 'the snozzberries taste like snozzberries' */\n    children?: ReactChild;\n}\n\n// Please do not use types off of a default export module or else Storybook Docs will suffer.\n// see: https://github.com/storybookjs/storybook/issues/9556\n/**\n * A custom Thing component. Neat!\n */\nexport const Thing: FC<Props> = ({children}) => {\n    return <div className={\"bg-amber-400\"}>{children || `the snozzberries taste like snozzberries`}</div>;\n};\n"],"names":["text","useState","count","setCount","useEffect","console","log","React","onClick","prevState","type","className","children"],"mappings":"mKAOuC,gBAAEA,IAAAA,OACXC,WAAiB,GAApCC,OAAOC,cACdC,aAAU,WACNC,QAAQC,IAAI,gBACb,IACIC,gCACHA,0BACIC,QAAS,kBAAIL,GAAS,SAAAM,UAAaA,EAAU,MAC7CC,KAAK,SACLC,UAAU,iOAETT,EAAM,mBAGXK,0BACIG,KAAK,SACLC,UAAU,0OAETX,EAAK,mBAGVO,0BACIG,KAAK,SACLC,UAAU,+OAIdJ,0BACIG,KAAK,SACLC,UAAU,iPAIdJ,0BACIG,KAAK,SACLC,UAAU,iQC9BU,mBACrBJ,uBAAKI,UAAW,kBADOC"}